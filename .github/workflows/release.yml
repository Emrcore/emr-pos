name: Build & Release (Windows)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-win:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: apps/desktop

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/desktop/package-lock.json

      # Kilit dosyası varsa npm ci ile, yoksa npm install; ci başarısız olursa install'a düş
      - name: Install deps
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci || (rm -f package-lock.json && npm install)
          else
            npm install
          fi

      - name: Ensure ip-config.json exists
        shell: bash
        run: |
          mkdir -p electron
          [ -f electron/ip-config.json ] || echo '{}' > electron/ip-config.json

      - name: Build renderer
        run: npm run build:renderer

      - name: Package & Publish (electron-builder)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win --publish always

      # Yayın oluşmasa bile derlenen .exe’yi artefact olarak yükle (farklı klasör adlarını kapsa)
      - name: Upload EXE artifact (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emr-pos-windows-exe
          path: |
            release/*.exe
            release/*/*.exe
          if-no-files-found: warn
