name: Build & Release (Windows)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-win:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: apps/desktop

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # cache kapalı; lock yoksa hata veriyordu

      - name: Install dependencies (ci if lock exists, else install)
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            echo "package-lock.json found -> npm ci"
            npm ci
          else
            echo "No lockfile -> npm install"
            npm install
          fi

      - name: Ensure ip-config.json exists
        shell: bash
        run: |
          mkdir -p electron
          [ -f electron/ip-config.json ] || echo '{}' > electron/ip-config.json

      - name: Build renderer
        run: npm run build:renderer

      - name: Package & Publish (electron-builder)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win --publish always

      - name: List outputs (debug)
        shell: bash
        run: |
          echo "Root tree:" && ls -lah ..
          echo "Desktop tree:" && ls -lah .
          echo "Release tree:" && ls -lah release || true
          echo "Nested release tree:" && ls -lah release/* || true

      # Release oluşsa da oluşmasa da derlenen exe'yi artefakt olarak yükle
      - name: Upload EXE artifact (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emr-pos-windows-exe
          path: |
            apps/desktop/release/*.exe
            apps/desktop/release/*/*.exe
          if-no-files-found: warn
